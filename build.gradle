plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.7-SNAPSHOT'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-amqp'

    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'org.springframework.cloud:spring-cloud-starter-loadbalancer'

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'

    // migration
    implementation "org.flywaydb:flyway-core:9.8.1"

    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.9.8'

    // Swagger
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.4'

    testImplementation 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation group: 'io.rest-assured', name: 'rest-assured', version: '5.3.0'
    testImplementation group: 'io.rest-assured', name: 'xml-path', version: '5.3.0'
    testImplementation 'com.h2database:h2'

    testImplementation "com.github.tomakehurst:wiremock-jre8:2.35.0"
    testImplementation 'org.springframework.amqp:spring-rabbit-test'


}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

springBoot {
    buildInfo()
}

processResources {
    expand(project.properties)
}

bootJar {
    archiveFileName = "application.${archiveExtension.get()}"
}